geom_point(mapping =
aes(x = displ,
y = hwy,
color = class) )
ggplot(data = mpg,
aes(x=displ, y= hwy)) +
geom_point(alpha = .3)
ggplot(data = mpg,
aes(x=displ, y= hwy)) +
geom_point(color = 'blue' )
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy,
color = class))+
geom_point()+
geom_smooth
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy,
color = class))+
geom_point()+
geom_smooth()
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy))+
geom_point(color = class)+
geom_smooth(se = F)
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy))+
geom_point()+
geom_smooth(se = F)
#facets
#single variable:
ggplot(data = mpg) +
geom_point(mapping =
aes(x = displ,
y = hwy),
alpha = .5) +
facet_wrap( . ~ class, nrow = 2)
#facet grid:
#facet_grid(<var_row> ~ <var_col>)
ggplot(data = mpg) +
geom_point(mapping =
aes(x = displ,
y = hwy),
alpha = .5) +
facet_grid(drv ~ cyl)
#facet vs color
ggplot(data = mpg,
mapping=aes(x=displ,y=hwy)) +
geom_point(alpha = .5)+
geom_smooth(method = lm)+
facet_wrap(~ class)
ggplot(data = mpg,
mapping=aes(x=displ,y=hwy,color=class)) +
geom_point(alpha = .5)+
geom_smooth(method = lm)
ggplot(data = mpg,
mapping=aes(x=displ,y=hwy,color=class)) +
geom_point(alpha = .5)+
geom_smooth(method = lm, se=F)
#local aes mapping:
ggplot(data = mpg) +
geom_point(mapping =
aes(x = displ,
y = hwy),
alpha = .3) +
geom_smooth(mapping =
aes(x = displ,
y = hwy)) +
geom_smooth(mapping =
aes(x = displ,
y = hwy),
method = lm,
color = 'red')
#global aes mapping:
ggplot(data = mpg,
mapping =
aes(x = displ,
y = hwy)) +
geom_point(mapping =
aes(color = class),
alpha = .3) +
geom_smooth()
```{r}
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds) +
geom_histogram(aes(x = price))
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds) +
geom_histogram(aes(x = price, bins=100))
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds) +
geom_histogram(aes(x = price))
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds,aes(x = price)) +
geom_histogram(color='steelblue',
fill = 'white',
bins = 100)
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds,aes(x = price)) +
geom_histogram(color= cut,
bins = 100)
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds,aes(x = price, color=cut)) +
geom_histogram(bins = 100)
```{r}
#statistical transformation
#bar, histogram, freqpoly measure frequency by bins
ggplot(diamonds,aes(x = price)) +
geom_histogram(color='steelblue',
bins = 100)
#freqpoly: line version of histogram
#takes same arguments as histogram
ggplot(diamonds) +
geom_freqpoly(aes(x = price, color = cut),
bins = 200)
#freqpoly: line version of histogram
#takes same arguments as histogram
ggplot(diamonds) +
geom_freqpoly(aes(x = price, color = cut),
bins = 200)+
facet_wrap(~ cut)
#Log functions
sale_df <- read_csv(
"https://bcdanl.github.io/data/home_sales_nyc.csv")
library(tidyverse)
mpg <- mpg
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy))+
geom_point(alpha = .5)+
geom_smooth(color='blue')
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy))+
geom_point(alpha = .5)+
geom_smooth(color='blue',se = F)
ggplot(data = mpg,
mapping = aes(x = displ,
y = hwy))+
geom_point(alpha = .4)+
geom_smooth(color='blue',se = F)
#Q2b
flights <- nycflights13::flights
airlines <- nycflights13::airlines
flights <- flights |>
left_join(airlines)
View(flights)
ggplot(data = flights,
mapping=aes(x = carrier))+
geom_bar()
ggplot(data = flights,
mapping=aes(y = name))+
geom_bar()
airlines_n <- flights |>
count(name)
ggplot(airlines_n)+
geom_col(aes(x=n,
y=fct_reorder(name,n)))
ggplot(data = flights,
mapping=aes(y = name))+
geom_bar()+
facet_wrap(~origin)
#This solved the problem of overlapping names on the x axis
ggplot(data = flights,
mapping=aes(y = name))+
geom_bar(fill=origin)
ggplot(data = flights)+
geom_bar(aes(y = name,fill=origin))
library(gapminder)
gapminder <- gapminder::gapminder
View(gapminder)
library(gapminder)
p <- ggplot(data = gapminder,
mapping =
aes( x = year,
y = gdpPercap ) )
p +
geom_line()
library(gapminder)
p <- ggplot(data = gapminder,
mapping =
aes( x = year,
y = gdpPercap ) )
p +
geom_line()+
geom_point()
library(gapminder)
p <- ggplot(data = gapminder,
mapping =
aes( x = year,
y = gdpPercap,
group = country) )
p +
geom_line()
library(tidyverse)
library(gapminder)
gapminder <- gapminder::gapminder
library(tidyverse)
library(gapminder)
gapminder <- gapminder::gapminder
view(gapminder)
library(tidyverse)
library(gapminder)
gapminder <- gapminder::gapminder
view(gapminder)
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
geom_smooth()
ggplot(data = gapminder,
mapping = aes(x = year,
y = gpdPercap))+
geom_line()
ggplot(data = gapminder,
mapping = aes(x = year,
y = gdpPercap))+
geom_line()
g <- gapminder |>
filter(country %in% 'United States')
View(g)
ggplot(data = g,
mapping = aes(x = year,
y = gdpPercap))+
geom_line()
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar()
View(g)
gdp <- gapminder |>
filter(year %in% 2007)
ggplot(data = gdp,
mapping = aes(x = gdpPercap))+
geom_boxplot()
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar(aes(color = continent))
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar(aes(fill = continent))
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar(aes(color = country))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
alpha = .1))+
geom_point(aes(color = continent))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
alpha = .5))+
geom_point(aes(color = continent))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent,
alpha = .1))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent,
alpha = .5))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent,
alpha = .9))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent,
alpha = .07))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent,
alpha = .04))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point(aes(color = continent))+
facet_wrap(~continent)
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
facet_wrap(~continent)+
geom_smooth()
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))+
geom_point()+
facet_wrap(~continent)+
geom_smooth()+
labs(x = "GDP Per Capita",
y = "Life Expectancy in Years",
title = "GDP and Life Expectancy Throughout the World",
subtitle = "Years 1952 Through 2007",
caption = "Source: Gapminder.")
library(gapminder)
gapminder <- gapminder
# install.packages("socviz")
library(socviz)
install.packages("socviz")
library(socviz)
?gss_sm
skimr::skim(gss_sm)
gss_sm <- gss_sm
# Describe the realationship between age & number of children they have
p <- ggplot(data = gss_sm,
mapping =
aes( x = age,
y = childs ))
# Describe the realationship between age & number of children they have
library(tidyverse)
p <- ggplot(data = gss_sm,
mapping =
aes( x = age,
y = childs ))
p +
geom_point(alpha = 0.2) +
geom_smooth()
ggplot(gss_sm,
aes(x=age)+
geom_bar()+
facet_wrap(~childs)
ggplot(gss_sm,
aes(x=age, y=factor(childs)))+
geom_boxplot()
#Describe the same relationship in terms of race & sex
p <- ggplot(data = gss_sm,
mapping =
aes( x = age,
y = childs ))
p +
geom_point(alpha = 0.2) +
geom_smooth() +
facet_grid(sex ~ race)
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion,
y = ..prop..))
p +
geom_bar()
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion))
p +
geom_bar(mapping =
aes(y = ..prop..,
group = 1))
# groub_by
gss_sm |>
group_by(religion) |>
count()
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar(aes(fill = continent,
show_legend = F))
ggplot(data = gapminder,
mapping = aes(x = continent))+
geom_bar(aes(fill = continent),
show.legend = F)
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion,
fill = religion))
p +
geom_bar(position = "fill")
#Dodge makes each color bar appear side-by-side
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion,
fill = religion))
p +
geom_bar(position = "dodge",
mapping =
aes(y = ..prop..))
#Dodge makes each color bar appear side-by-side
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion,
fill = religion))
p +
geom_bar(position = "dodge",
mapping =
aes(y = ..prop..,
group=1))
#Dodge makes each color bar appear side-by-side
p <- ggplot(data = gss_sm,
mapping =
aes(x = bigregion,
fill = religion))
p +
geom_bar(position = "dodge",
mapping =
aes(y = ..prop..,
group=religion))
#quick fix for weird props:
p <- ggplot(data = gss_sm,
mapping =
aes(x = religion))
p +
geom_bar(position = "dodge",
mapping =
aes(y = ..prop..,
group = bigregion)) +
facet_wrap(~ bigregion,
ncol = 1)
?midwest
glimpse(midwest)
skim(midwest)
?midwest
glimpse(midwest)
skimr::skim(midwest)
view(midwest)
p <- ggplot(data = midwest,
mapping =
aes(x = area))
p +
geom_histogram()
p <- ggplot(data = midwest,
mapping =
aes(x = area))
p +
geom_histogram(bins = 50,
color='white',
fill='steelblue')
p <- ggplot(data =
filter(midwest,
state %in%
c("OH", "WI")),
mapping =
aes(x = percollege,
fill = state) )
p +
geom_histogram(alpha = 0.4,
bins = 20)
p <- ggplot(data = midwest,
mapping =
aes(x = area))
p +
geom_density()
p <- ggplot(data = midwest,
mapping =
aes(x = area,
fill = state,
color = state))
p +
geom_density(alpha = 0.3)
p <- ggplot(data =
filter(midwest,
state %in%
c("OH", "WI")),
mapping =
aes(x = area,
fill = state,
color = state))
p +
geom_density( alpha = 0.3,
mapping =
aes(y = after_stat(scaled) ))
socviz::titanic
#avoid transformations when necessary
#describing the relationship between fate and percent
p <- ggplot(data = titanic,
mapping =
aes(x = fate,
y = percent,
fill = sex))
p +
geom_bar(position = "dodge",
stat = "identity") +
theme(legend.position = "top")
oecd_sum
p <- ggplot(data = socviz::oecd_sum,
mapping =
aes(x = year,
y = diff,
fill = hi_lo))
p +
geom_col() +
guides(fill = "none") +
labs(x = NULL,
y = "Difference in Years",
title = "The US Life Expectancy Gap",
subtitle = "Difference between US and OECD
average life expectancies, 1960-2015",
caption = "Data: OECD. After a chart by Christopher Ingraham,
Washington Post, December 27th 2017.") +
theme_minimal()
