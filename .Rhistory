mapping = aes(x = month,
y = temperature,
color = location))+
geom_line(aes(group = location)+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day %in% 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_line(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1, month %in% c(01,04,07,10))
q1 <- ncdc_temp |>
filter(day == 1, month %in% c(1,4,7,10))
q1 <- ncdc_temp |>
filter(day == 1, month %in% c('01','04','07','10'))
q1 <- ncdc_temp |>
filter(day == 1, month %in% c('01','04','07','10'))
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_line(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_line(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1, month %in% c('01','04','07','10'))
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se = F)+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_dense(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_density(aes(group = location))+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se=F)+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se=F, method = loess)+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se=F, method = 'gam')+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se=F, method = 'loess')+
geom_point(color = 'black')
q1 <- ncdc_temp |>
filter(day == 1)
ggplot(data = q1,
mapping = aes(x = month,
y = temperature,
color = location))+
geom_smooth(aes(group = location), se=F, method = 'gam')+
geom_point(color = 'black')
reticulate::repl_python()
gss_sm <-  socviz::gss_sm
bigregion_religion |>
select(id, bigregion, religion)
library(tidyverse)
bigregion_religion |>
select(id, bigregion, religion)
library(tidyverse)
bigregion_religion <- gss_sm |>
select(id, bigregion, religion)
library(tidyverse)
bigregion_religion <- gss_sm |>
select(id, bigregion, religion) |>
arrange(bigregion, religion, id) |>
group_by(bigregion, religion)
bigregion_religion
library(tidyverse)
bigregion_religion <- gss_sm |>
select(id, bigregion, religion) |>
arrange(bigregion, religion, id) |>
group_by(bigregion, religion) |>
summarize(n = n()) #counts # of observatoins for each group
library(tidyverse)
bigregion_religion <- gss_sm |>
select(id, bigregion, religion) |>
arrange(bigregion, religion, id) |>
group_by(bigregion, religion) |>
summarize(n = n()) #counts # of observatoins for each group
bigregion_religion
bigregion_religion2 <- gss_sm |>
select(id, bigregion, religion) |>
arrange(bigregion, religion, id) |>
group_by(bigregion, religion) |>
summarize(n = n()) |>
mutate(tot = sum(n)) |> # sum is calculated for each region
mutate(percentage = (n/tot)*100)
View(bigregion_religion2)
p <- ggplot( bigregion_religion2,
aes( x = bigregion,
y = percentage,
fill = religion))
p + geom_bar( stat = identity,
position = "dodge2" ) +
labs(x = "Region",
y = "Percent",
fill = "Religion") +
theme(legend.position
= "top")
p <- ggplot( bigregion_religion2,
aes( x = bigregion,
y = percentage,
fill = religion))
p + geom_col(
position = "dodge2" ) +
labs(x = "Region",
y = "Percent",
fill = "Religion") +
theme(legend.position
= "top")
p <- ggplot( bigregion_religion2,
aes( x = bigregion,
y = percentage,
fill = religion))
p + geom_col(
position = "dodge2" ) +
labs(x = "",
y = "Percent",
fill = "Religion") +
theme(legend.position
= "top")
p <- ggplot( bigregion_religion2,
aes( x = bigregion,
y = percentage,
fill = religion))
p + geom_col(
position = "dodge2" ) +
labs(x = "",
y = "",
fill = "Religion") +
scale_y_continuous(labels = scales::percent)
theme(legend.position
= "top")
ggplot(gss_sm,
mapping = aes(y = religion,
fill = religion))+
geom_bar()+
facet_wrap(~ bigregion)
ggplot(gss_sm,
mapping = aes(y = religion,
fill = religion))+
geom_bar()+
facet_wrap(~ bigregion,
col = 4)
ggplot(gss_sm,
mapping = aes(y = religion,
fill = religion))+
geom_bar()+
facet_wrap(~ bigregion, aes(col=4))
ggplot(gss_sm,
mapping = aes(y = religion,
fill = religion))+
geom_bar()+
facet_wrap(~ bigregion, aes(nrow=1))
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = reigion,
fill = religion))+
geom_col()+
facet_wrap(~ bigregion,
nrow=1)
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col()+
facet_wrap(~ bigregion,
nrow=1)
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col(show.legend=F)+
facet_wrap(~ bigregion,
nrow=1)+
labs(x = 'Religion',
y = '')+
scale_y_coninuous(labels = scales::percent)
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col(show.legend=F)+
facet_wrap(~ bigregion,
nrow=1)+
labs(x = 'Religion',
y = '')+
scale_y_continuous(labels = scales::percent)
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col(show.legend=F)+
facet_wrap(~ bigregion,
nrow=1)+
labs(x = 'Religion',
y = '')+
scale_y_continuous(labels = scales::percent)
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col(show.legend=F)+
facet_wrap(~ bigregion,
nrow=1)+
labs(x = 'Religion',
y = 'Percent')
ggplot(bigregion_religion2,
mapping = aes(x = percentage,
y = religion,
fill = religion))+
geom_col(show.legend=F)+
facet_wrap(~ bigregion,
nrow=1)+
labs(x = 'Percent',
y = 'Religion')
organ <- socviz::organdata
organdata <- socviz::organdata
ggplot(data = organdata,
mapping = aes(x = donors,
y = country))+
geom_boxplot
ggplot(data = organdata,
mapping = aes(x = donors,
y = country))+
geom_boxplot()
#better way: order by amount of donors
#ftc reorder lets you reorder observations based on a variable's value
organdata <- organdata |>
mutate(country =
fct_reorder(country,
donors, na.rm = T) )
organdata
levels(organdata$country)
p <- ggplot(data = organdata,
mapping =
aes(x = country,
y = donors))
p + geom_boxplot() +
labs(x = NULL) +
coord_flip()
#add color to show variable world
p <- ggplot(data = organdata,
mapping =
aes(x =
fct_reorder(
country,
donors,
na.rm=TRUE),
y = donors,
fill = world))
p + geom_boxplot() +
labs(x=NULL) +
coord_flip() +
theme(legend.position = "top")
organdata <- socviz::organdata
DT::datatable(organdata)
View(organdata)
#better way: order by amount of donors
#ftc reorder lets you reorder observations based on a variable's value (default is ascending order)
organdata <- organdata |>
mutate(country =
fct_reorder(country, #categorical variable ordered by ...
donors, #numerical value
na.rm = T) )
#na.rm = T removes an NA donor values from country
organdata
# you can use stats within fct_reorder. Syntax:
#fct_reorder(
#categorical,
#numerical,
#statistic
#)
organdata <- socviz::organdata
organdata <- socviz::organdata
library(tidyverse)
by_country <- organdata |>
group_by(consent_law, country) |>
summarize(donors_mean= mean(donors, na.rm = TRUE),
donors_sd = sd(donors, na.rm = TRUE),
gdp_mean = mean(gdp, na.rm = TRUE),
health_mean = mean(health, na.rm = TRUE),
roads_mean = mean(roads, na.rm = TRUE),
cerebvas_mean = mean(cerebvas, na.rm =TRUE))
View(by_country)
by_country2 <- organdata |>
group_by(consent_law, country) |>
summarize_if(is.numeric, lst(mean, sd), na.rm = TRUE) |>
ungroup()
#is.numeric checks for numeric values
#calculates for every numerical variable
#lst: list the stats you want to calculate
View(by_country2)
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consentlaw))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law))+
coord_flip()
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law))+
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law,
fct_reorder(country,
donors,
na.rm = T)))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country))+
geom_point(aes(color = consent_law,
fct_reorder(country,
donors_mean,
na.rm = T)))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country,
(fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point(aes(color = consent_law))
by_country2 |>
ggplot(aes(x = donors_mean,
y = country,
(fct_reorder(country,
donors_mean,
na.rm = T))))+
geom_point(aes(color = consent_law))
by_country2 |>
ggplot(aes(x = donors_mean,
y = (fct_reorder(country,
donors_mean,
na.rm = T))))+
geom_point(aes(color = consent_law))
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
facet_wrap(~ consent_law)
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)+
coord_flip()
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)+
scales = 'free_y'
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)+
scales(scales = 'free_y')
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law)+
scales(scales::scales = 'free_y')
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law, scales = 'free_y')
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law, scales = 'free_y')+
coord_flip()
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law, scales = 'free_y')+
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law, scales = 'free_y')
#b
ggplot(data = by_country2,
mapping = aes(x = donors_mean,
y = fct_reorder(country,
donors_mean,
na.rm = T)))+
geom_point()+
facet_wrap(~ consent_law, scales = 'free_y', nrow = 2)
